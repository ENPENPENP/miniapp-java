<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elphen.miniapp.authserver.mapper.TUserMapper">
  <resultMap id="BaseResultMap" type="com.elphen.miniapp.domain.entity.TUser">
    <!--@mbg.generated-->
    <!--@Table t_user-->
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="NICK_NAME" jdbcType="VARCHAR" property="nickName" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    USER_ID, USER_NAME, `PASSWORD`, NICK_NAME, PHONE, EMAIL
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="USER_ID" keyProperty="userId" parameterType="com.elphen.miniapp.domain.entity.TUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_user (USER_NAME, `PASSWORD`, NICK_NAME, 
      PHONE, EMAIL)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="USER_ID" keyProperty="userId" parameterType="com.elphen.miniapp.domain.entity.TUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="password != null">
        `PASSWORD`,
      </if>
      <if test="nickName != null">
        NICK_NAME,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elphen.miniapp.domain.entity.TUser">
    <!--@mbg.generated-->
    update t_user
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `PASSWORD` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        NICK_NAME = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elphen.miniapp.domain.entity.TUser">
    <!--@mbg.generated-->
    update t_user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      `PASSWORD` = #{password,jdbcType=VARCHAR},
      NICK_NAME = #{nickName,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByUserName" resultType="com.elphen.miniapp.domain.entity.TUser">
    select <include refid="Base_Column_List"></include>
    from t_user
    where USER_NAME = #{userName}
  </select>
</mapper>